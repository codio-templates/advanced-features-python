{
	"source": {
		"name": "Unit Test Example",
		"showName": true,
		"instructions": "Write a function called `circle_area` that takes a parameter for the radius. The function should return the area of a circle for the given radius. Your program should raise an error when the wrong data type is passed to the function, and it should raise an error when a negative number is passed to `circle_area`.\n\nSubmit your code to be evaluated.",
		"command": "python /usr/share/codio/assessments/assessments.py",
		"codeEnvConfig": "{\"type\":\"python\",\"subtype\":\"unittest\",\"files\":[\".guides/secure/test_circle_area.py\"],\"maxPoints\":100,\"timeout\":300,\"executable\":\"python3\",\"pythonwd\":\".guides/secure\",\"partialPoints\":false}",
		"pythonPath": "/home/codio/workspace/student_code/",
		"timeoutSeconds": 300,
		"guidance": "Here is one possible solution:\n\n```python\nfrom math import pi\n\ndef circle_area(radius):\n  if type(radius) not in [int, float]:\n    raise TypeError(\"Radius must be a non-negative, real number.\")\n  if radius < 0:\n    raise ValueError(\"Radius cannot be a negative number\")\n  return pi * radius ** 2\n```\n\nYour test should test several valid radii. In addition, check for a **value error** when a negative number is passed to `circle_area`. Lastly, check for a **type error** when the wrong data type is passed to `circle_area`.",
		"showGuidanceAfterResponseOption": {
			"type": "Always"
		},
		"maxAttemptsCount": 1,
		"points": 100,
		"arePartialPointsAllowed": false,
		"metadata": {
			"tags": [
				{
					"name": "Assessment Type",
					"value": "Advanced Code Test"
				}
			],
			"files": [
				"student_code/circle.py",
				".guides/circle.py"
			],
			"opened": [
				{
					"type": "file",
					"panelNumber": 0,
					"content": "student_code/circle.py"
				}
			]
		},
		"bloomsObjectiveLevel": "",
		"learningObjectives": ""
	},
	"taskId": "test-2633892246",
	"type": "test"
}